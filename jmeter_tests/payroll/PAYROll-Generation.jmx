<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="5.4.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PAYROll Generation" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">payroll-dev-api.amalitech-dev.net</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">payroll-dev.amalitech-dev.net</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetDepartmentPayrollColumnSummationsReport&quot;,&quot;variables&quot;:{&quot;startWith&quot;:&quot;SC&quot;,&quot;yearMonth&quot;:&quot;2024-01&quot;},&quot;query&quot;:&quot;mutation GetDepartmentPayrollColumnSummationsReport($yearMonth: String, $startWith: String) {\n  getDepartmentPayrollColumnSummationsReport(\n    yearMonth: $yearMonth\n    startWith: $startWith\n  ) {\n    basicSalary\n    allowance\n    grossSalary\n    initialGross\n    employeeSSF\n    employerSSF\n    taxRelief\n    totalRelief\n    taxableIncome\n    bonusTax\n    paye\n    deductions\n    netSalary\n    bonus\n    payableNetSalary\n    totalLoanDeduction\n    backPay\n    excessBonus\n    initialBonus\n    employeeCostToCompany\n    studentLoanTrustFund\n    totalTaxOnBonus\n    cashEmolument\n    assessableIncome\n    totalReliefs\n    chargeableIncome\n    totalTaxPayableToGRA\n    bonusTotal\n    employeeTierThreePre\n    employerTierThreePre\n    employeeTierThreeAfter\n    employerTierThreeAfter\n    teamPerformance\n    excessTeamPerformance\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;120&quot;, &quot;Google Chrome&quot;;v=&quot;120&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIk1BTkFHRVIiLCJBQ0NPVU5UQU5UIiwiU1VQRVJfQURNSU4iLCJTRU5JT1JfQUNDT1VOVEFOVCJdLCJwcmV2VXJsIjoiaHR0cHM6Ly9hcm1zZW50LXRlc3QuYW1hbGl0ZWNoLWRldi5uZXQiLCJuYW1lIjoiUmFwaGFlbCBLYWJ1dGV5IiwiZW1haWwiOiJyYXBoYWVsLm9jYW5zZXlAYW1hbGl0ZWNoLm9yZyIsInRva2VuIjoiYnZKVEx3c3hWdWZCSGVQTHZ6QmFOUmJ4WURFRFB6bExJSkhwdFdzTkNpcHpmT2VJcUpUWkxTeEpsaFdsd0lRdGxYTnhveGZLVHhLZmdERGYiLCJpYXQiOjE3MDYwMTkxODQsImV4cCI6MTcwNjEwNTU4NH0.oXW54HQgE6OLGD-HQxsNzejwX-V3SFXNRzV7kqKFM3QeEs5A7jLFgs4hiwgItfNXnGpIyq5R-nMBhVnK6oIq5w</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ListByEmployeeName&quot;,&quot;variables&quot;:{&quot;searchName&quot;:null,&quot;startWith&quot;:&quot;SC&quot;,&quot;yearMonth&quot;:&quot;2024-01&quot;,&quot;page&quot;:0,&quot;size&quot;:20},&quot;query&quot;:&quot;query ListByEmployeeName($searchName: String, $startWith: String, $page: Int, $size: Int, $yearMonth: String) {\n  listByEmployeeName(\n    searchName: $searchName\n    page: $page\n    size: $size\n    startWith: $startWith\n    yearMonth: $yearMonth\n  ) {\n    data {\n      payrollId\n      pid\n      month\n      year\n      cashEmolument\n      assessableIncome\n      totalReliefs\n      chargeableIncome\n      totalTaxPayableToGRA\n      employeeTierThreePre\n      employerTierThreePre\n      hazardous\n      optionCode\n      remarks\n      employeeTierThreeAfter\n      employerTierThreeAfter\n      accommodationElement\n      vehicleElement\n      nonCashBenefit\n      overtimeIncome\n      overtimeTax\n      severancePay\n      initialGross\n      totalAllowance\n      totalTaxableAllowance\n      totalNonTaxableAllowance\n      grossSalary\n      employeeSSF\n      tierOne\n      tierTwo\n      taxRelief\n      totalRelief\n      taxableIncome\n      paye\n      loanDeduction\n      totalDeduction\n      netSalary\n      employerSSF\n      employeeCostToCompany\n      bonusTotal\n      totalNetBonus\n      totalTaxOnBonus\n      payableNetSalary\n      excessBonus\n      initialBonus\n      backPay\n      date\n      studentLoanTrustFund\n      teamPerformance {\n        id\n        sixMonthsSalary\n        tpBonus\n        excessTpBonus\n        tpTax\n        __typename\n      }\n      bonuses {\n        id\n        employeeId\n        employeeNumber\n        description\n        startDate\n        endDate\n        totalBonus\n        monthlyBonus\n        displayName\n        date\n        __typename\n      }\n      deductions {\n        id\n        employeeId\n        employeeNumber\n        description\n        startDate\n        endDate\n        amountDue\n        monthlyDeduction\n        displayName\n        totalDeduction\n        date\n        __typename\n      }\n      allowances {\n        id\n        taxable\n        employeeId\n        employeeNumber\n        description\n        startDate\n        endDate\n        totalAllowance\n        monthlyAllowance\n        displayName\n        date\n        __typename\n      }\n      employee {\n        id\n        userId\n        customPayrollID\n        employeeId\n        firstName\n        middleName\n        lastName\n        displayName\n        workEmail\n        department\n        jobTitle\n        isManager\n        secondaryEmployment\n        organization\n        employeePosition\n        status\n        nonResident\n        basicSalary\n        taxRelief\n        backPay\n        tierThreePercentage\n        employeeType\n        employeeBankDetails {\n          id\n          userId\n          bankName\n          accountName\n          branchName\n          accountNumber\n          sortCode\n          employeeTierThreePercent\n          __typename\n        }\n        employeeIdentification {\n          id\n          userId\n          customSSN\n          customTIN\n          ssnitContributor\n          ghanaCard\n          nonResident\n          tierTwo\n          tierThree\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageable {\n      size\n      number\n      totalPages\n      totalElement\n      empty\n      first\n      last\n      sort\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;120&quot;, &quot;Google Chrome&quot;;v=&quot;120&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIk1BTkFHRVIiLCJBQ0NPVU5UQU5UIiwiU1VQRVJfQURNSU4iLCJTRU5JT1JfQUNDT1VOVEFOVCJdLCJwcmV2VXJsIjoiaHR0cHM6Ly9hcm1zZW50LXRlc3QuYW1hbGl0ZWNoLWRldi5uZXQiLCJuYW1lIjoiUmFwaGFlbCBLYWJ1dGV5IiwiZW1haWwiOiJyYXBoYWVsLm9jYW5zZXlAYW1hbGl0ZWNoLm9yZyIsInRva2VuIjoiYnZKVEx3c3hWdWZCSGVQTHZ6QmFOUmJ4WURFRFB6bExJSkhwdFdzTkNpcHpmT2VJcUpUWkxTeEpsaFdsd0lRdGxYTnhveGZLVHhLZmdERGYiLCJpYXQiOjE3MDYwMTkxODQsImV4cCI6MTcwNjEwNTU4NH0.oXW54HQgE6OLGD-HQxsNzejwX-V3SFXNRzV7kqKFM3QeEs5A7jLFgs4hiwgItfNXnGpIyq5R-nMBhVnK6oIq5w</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GenerateNewPayrolls&quot;,&quot;variables&quot;:{&quot;user&quot;:&quot;Raphael Kabutey&quot;},&quot;query&quot;:&quot;mutation GenerateNewPayrolls($user: String) {\n  generateNewPayrolls(user: $user) {\n    message\n    success\n    code\n    data {\n      payrollId\n      pid\n      month\n      year\n      cashEmolument\n      assessableIncome\n      totalReliefs\n      chargeableIncome\n      totalTaxPayableToGRA\n      employeeTierThreePre\n      employerTierThreePre\n      hazardous\n      optionCode\n      remarks\n      employeeTierThreeAfter\n      employerTierThreeAfter\n      accommodationElement\n      vehicleElement\n      nonCashBenefit\n      overtimeIncome\n      overtimeTax\n      severancePay\n      initialGross\n      totalAllowance\n      totalTaxableAllowance\n      totalNonTaxableAllowance\n      grossSalary\n      employeeSSF\n      tierOne\n      tierTwo\n      taxRelief\n      totalRelief\n      taxableIncome\n      paye\n      loanDeduction\n      totalDeduction\n      netSalary\n      employerSSF\n      employeeCostToCompany\n      bonusTotal\n      totalNetBonus\n      totalTaxOnBonus\n      payableNetSalary\n      excessBonus\n      initialBonus\n      backPay\n      date\n      studentLoanTrustFund\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;120&quot;, &quot;Google Chrome&quot;;v=&quot;120&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIk1BTkFHRVIiLCJBQ0NPVU5UQU5UIiwiU1VQRVJfQURNSU4iLCJTRU5JT1JfQUNDT1VOVEFOVCJdLCJwcmV2VXJsIjoiaHR0cHM6Ly9hcm1zZW50LXRlc3QuYW1hbGl0ZWNoLWRldi5uZXQiLCJuYW1lIjoiUmFwaGFlbCBLYWJ1dGV5IiwiZW1haWwiOiJyYXBoYWVsLm9jYW5zZXlAYW1hbGl0ZWNoLm9yZyIsInRva2VuIjoiYnZKVEx3c3hWdWZCSGVQTHZ6QmFOUmJ4WURFRFB6bExJSkhwdFdzTkNpcHpmT2VJcUpUWkxTeEpsaFdsd0lRdGxYTnhveGZLVHhLZmdERGYiLCJpYXQiOjE3MDYwMTkxODQsImV4cCI6MTcwNjEwNTU4NH0.oXW54HQgE6OLGD-HQxsNzejwX-V3SFXNRzV7kqKFM3QeEs5A7jLFgs4hiwgItfNXnGpIyq5R-nMBhVnK6oIq5w</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev.amalitech-dev.net/service-center-payroll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">service-center-payroll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;120&quot;, &quot;Google Chrome&quot;;v=&quot;120&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GetDepartmentPayrollColumnSummationsReport&quot;,&quot;variables&quot;:{&quot;startWith&quot;:&quot;SC&quot;,&quot;yearMonth&quot;:&quot;2024-01&quot;},&quot;query&quot;:&quot;mutation GetDepartmentPayrollColumnSummationsReport($yearMonth: String, $startWith: String) {\n  getDepartmentPayrollColumnSummationsReport(\n    yearMonth: $yearMonth\n    startWith: $startWith\n  ) {\n    basicSalary\n    allowance\n    grossSalary\n    initialGross\n    employeeSSF\n    employerSSF\n    taxRelief\n    totalRelief\n    taxableIncome\n    bonusTax\n    paye\n    deductions\n    netSalary\n    bonus\n    payableNetSalary\n    totalLoanDeduction\n    backPay\n    excessBonus\n    initialBonus\n    employeeCostToCompany\n    studentLoanTrustFund\n    totalTaxOnBonus\n    cashEmolument\n    assessableIncome\n    totalReliefs\n    chargeableIncome\n    totalTaxPayableToGRA\n    bonusTotal\n    employeeTierThreePre\n    employerTierThreePre\n    employeeTierThreeAfter\n    employerTierThreeAfter\n    teamPerformance\n    excessTeamPerformance\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;120&quot;, &quot;Google Chrome&quot;;v=&quot;120&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIk1BTkFHRVIiLCJBQ0NPVU5UQU5UIiwiU1VQRVJfQURNSU4iLCJTRU5JT1JfQUNDT1VOVEFOVCJdLCJwcmV2VXJsIjoiaHR0cHM6Ly9hcm1zZW50LXRlc3QuYW1hbGl0ZWNoLWRldi5uZXQiLCJuYW1lIjoiUmFwaGFlbCBLYWJ1dGV5IiwiZW1haWwiOiJyYXBoYWVsLm9jYW5zZXlAYW1hbGl0ZWNoLm9yZyIsInRva2VuIjoiYnZKVEx3c3hWdWZCSGVQTHZ6QmFOUmJ4WURFRFB6bExJSkhwdFdzTkNpcHpmT2VJcUpUWkxTeEpsaFdsd0lRdGxYTnhveGZLVHhLZmdERGYiLCJpYXQiOjE3MDYwMTkxODQsImV4cCI6MTcwNjEwNTU4NH0.oXW54HQgE6OLGD-HQxsNzejwX-V3SFXNRzV7kqKFM3QeEs5A7jLFgs4hiwgItfNXnGpIyq5R-nMBhVnK6oIq5w</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ListByEmployeeName&quot;,&quot;variables&quot;:{&quot;searchName&quot;:null,&quot;startWith&quot;:&quot;SC&quot;,&quot;yearMonth&quot;:&quot;2024-01&quot;,&quot;page&quot;:0,&quot;size&quot;:20},&quot;query&quot;:&quot;query ListByEmployeeName($searchName: String, $startWith: String, $page: Int, $size: Int, $yearMonth: String) {\n  listByEmployeeName(\n    searchName: $searchName\n    page: $page\n    size: $size\n    startWith: $startWith\n    yearMonth: $yearMonth\n  ) {\n    data {\n      payrollId\n      pid\n      month\n      year\n      cashEmolument\n      assessableIncome\n      totalReliefs\n      chargeableIncome\n      totalTaxPayableToGRA\n      employeeTierThreePre\n      employerTierThreePre\n      hazardous\n      optionCode\n      remarks\n      employeeTierThreeAfter\n      employerTierThreeAfter\n      accommodationElement\n      vehicleElement\n      nonCashBenefit\n      overtimeIncome\n      overtimeTax\n      severancePay\n      initialGross\n      totalAllowance\n      totalTaxableAllowance\n      totalNonTaxableAllowance\n      grossSalary\n      employeeSSF\n      tierOne\n      tierTwo\n      taxRelief\n      totalRelief\n      taxableIncome\n      paye\n      loanDeduction\n      totalDeduction\n      netSalary\n      employerSSF\n      employeeCostToCompany\n      bonusTotal\n      totalNetBonus\n      totalTaxOnBonus\n      payableNetSalary\n      excessBonus\n      initialBonus\n      backPay\n      date\n      studentLoanTrustFund\n      teamPerformance {\n        id\n        sixMonthsSalary\n        tpBonus\n        excessTpBonus\n        tpTax\n        __typename\n      }\n      bonuses {\n        id\n        employeeId\n        employeeNumber\n        description\n        startDate\n        endDate\n        totalBonus\n        monthlyBonus\n        displayName\n        date\n        __typename\n      }\n      deductions {\n        id\n        employeeId\n        employeeNumber\n        description\n        startDate\n        endDate\n        amountDue\n        monthlyDeduction\n        displayName\n        totalDeduction\n        date\n        __typename\n      }\n      allowances {\n        id\n        taxable\n        employeeId\n        employeeNumber\n        description\n        startDate\n        endDate\n        totalAllowance\n        monthlyAllowance\n        displayName\n        date\n        __typename\n      }\n      employee {\n        id\n        userId\n        customPayrollID\n        employeeId\n        firstName\n        middleName\n        lastName\n        displayName\n        workEmail\n        department\n        jobTitle\n        isManager\n        secondaryEmployment\n        organization\n        employeePosition\n        status\n        nonResident\n        basicSalary\n        taxRelief\n        backPay\n        tierThreePercentage\n        employeeType\n        employeeBankDetails {\n          id\n          userId\n          bankName\n          accountName\n          branchName\n          accountNumber\n          sortCode\n          employeeTierThreePercent\n          __typename\n        }\n        employeeIdentification {\n          id\n          userId\n          customSSN\n          customTIN\n          ssnitContributor\n          ghanaCard\n          nonResident\n          tierTwo\n          tierThree\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageable {\n      size\n      number\n      totalPages\n      totalElement\n      empty\n      first\n      last\n      sort\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;120&quot;, &quot;Google Chrome&quot;;v=&quot;120&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIk1BTkFHRVIiLCJBQ0NPVU5UQU5UIiwiU1VQRVJfQURNSU4iLCJTRU5JT1JfQUNDT1VOVEFOVCJdLCJwcmV2VXJsIjoiaHR0cHM6Ly9hcm1zZW50LXRlc3QuYW1hbGl0ZWNoLWRldi5uZXQiLCJuYW1lIjoiUmFwaGFlbCBLYWJ1dGV5IiwiZW1haWwiOiJyYXBoYWVsLm9jYW5zZXlAYW1hbGl0ZWNoLm9yZyIsInRva2VuIjoiYnZKVEx3c3hWdWZCSGVQTHZ6QmFOUmJ4WURFRFB6bExJSkhwdFdzTkNpcHpmT2VJcUpUWkxTeEpsaFdsd0lRdGxYTnhveGZLVHhLZmdERGYiLCJpYXQiOjE3MDYwMTkxODQsImV4cCI6MTcwNjEwNTU4NH0.oXW54HQgE6OLGD-HQxsNzejwX-V3SFXNRzV7kqKFM3QeEs5A7jLFgs4hiwgItfNXnGpIyq5R-nMBhVnK6oIq5w</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://payroll-dev-api.amalitech-dev.net/api/v1/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ListCurrentPayrollStatus&quot;,&quot;variables&quot;:{&quot;yearMonth&quot;:&quot;2024-01&quot;},&quot;query&quot;:&quot;query ListCurrentPayrollStatus($yearMonth: String) {\n  listCurrentPayrollStatus(yearMonth: $yearMonth) {\n    psid\n    authorized\n    approved\n    generated\n    authorizedBy\n    approvedBy\n    generatedBy\n    generatedDate\n    authorizedDate\n    approvedDate\n    date\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;120&quot;, &quot;Google Chrome&quot;;v=&quot;120&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIk1BTkFHRVIiLCJBQ0NPVU5UQU5UIiwiU1VQRVJfQURNSU4iLCJTRU5JT1JfQUNDT1VOVEFOVCJdLCJwcmV2VXJsIjoiaHR0cHM6Ly9hcm1zZW50LXRlc3QuYW1hbGl0ZWNoLWRldi5uZXQiLCJuYW1lIjoiUmFwaGFlbCBLYWJ1dGV5IiwiZW1haWwiOiJyYXBoYWVsLm9jYW5zZXlAYW1hbGl0ZWNoLm9yZyIsInRva2VuIjoiYnZKVEx3c3hWdWZCSGVQTHZ6QmFOUmJ4WURFRFB6bExJSkhwdFdzTkNpcHpmT2VJcUpUWkxTeEpsaFdsd0lRdGxYTnhveGZLVHhLZmdERGYiLCJpYXQiOjE3MDYwMTkxODQsImV4cCI6MTcwNjEwNTU4NH0.oXW54HQgE6OLGD-HQxsNzejwX-V3SFXNRzV7kqKFM3QeEs5A7jLFgs4hiwgItfNXnGpIyq5R-nMBhVnK6oIq5w</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
